{"version":3,"sources":["contacts-rtk/contactsSlice.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/Loader/Spinner.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","createContact","mutation","contactData","url","method","body","content","name","number","invalidatesTags","deleteContact","contactId","useGetContactsQuery","useDeleteContactMutation","useCreateContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","setupListeners","dispatch","ContactForm","useState","setName","setNumber","contacts","data","handleChange","e","currentTarget","value","scroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","reset","className","onSubmit","preventDefault","find","el","toLowerCase","doubleName","toast","error","doubleNumber","success","onChange","id","shortid","generate","type","pattern","title","required","disabled","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ContactItem","isDeleting","isLoading","onClick","protoTypes","PropTypes","string","isRequired","Spinner","color","height","width","timeout","style","left","Component","Filter","filterValue","ContactList","isFetching","isError","setFilterValue","filtredContacts","setFiltredContacts","useEffect","normalizeFilter","showContacts","filter","item","includes","vlue","map","arrayOf","shape","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d548ca1.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://6192166f41928b00176902b2.mockapi.io/contacts\",\n  }),\n  tagTypes: [\"Contact\"],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: [\"Contact\"],\n    }),\n    createContact: builder.mutation({\n      query: (contactData) => ({\n        url: `/contacts`,\n        method: \"POST\",\n        body: {\n          content: contactData,\n          name: contactData.name,\n          number: contactData.number,\n        },\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n  }),\n});\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactsApi;\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import middleware from \"./contacts-middleware\";\n// import contactsReducer from \"./contacts-reducer\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { contactsApi } from \"../contacts-rtk/contactsSlice\";\n\nconst store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n\n  // middleware,\n});\nsetupListeners(store.dispatch);\nexport default store;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useCreateContactMutation } from \"../../contacts-rtk/contactsSlice\";\nimport { useGetContactsQuery } from \"../../contacts-rtk/contactsSlice\";\n\nfunction ContactForm() {\n  const [createContact] = useCreateContactMutation();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const doubleName = (name) =>\n    contacts.find((el) => {\n      return el.name.toLowerCase() === name.toLowerCase();\n    });\n  const doubleNumber = (number) =>\n    contacts.find((el) => {\n      return el.number === number;\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createContact({ name, number });\n    reset();\n\n    if (doubleName(name)) {\n      return toast.error(`This name ${name} already exists in the database`);\n    }\n    if (doubleNumber(number)) {\n      return toast.error(\n        `This number ${number} already exists in the database`\n      );\n    }\n\n    toast.success(`${name} successfully added ;)`);\n    scroll();\n\n    return;\n  };\n  const scroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      // top: 1000,\n      behavior: \"smooth\",\n    });\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <>\n      <form className=\"form__box\" onSubmit={handleSubmit}>\n        <label className=\"form__label-box\">\n          <span className=\"form__label\">Name</span>\n          <input\n            className=\"form__input\"\n            value={name}\n            onChange={handleChange}\n            id={shortid.generate()}\n            type=\"text\"\n            name=\"name\"\n            data-action=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"form__label-box\">\n          <span className=\"form__label\"> Number</span>\n          <input\n            className=\"form__input\"\n            onChange={handleChange}\n            value={number}\n            id={shortid.generate()}\n            type=\"tel\"\n            name=\"number\"\n            data-action=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр, и может содержать пробелы, тире, круглые скобки, и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <div className=\"form__btn-thumb\">\n          <button\n            className=\"form__addBtn\"\n            type=\"submit\"\n            disabled={!number || !name}\n          >\n            Add contact\n          </button>\n        </div>\n      </form>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useDeleteContactMutation } from \"../../contacts-rtk/contactsSlice\";\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <>\n      <li id={id} key={id} className=\"contacts__item\">\n        {name}: <span className=\"contacts__number\"> {number}</span>\n        <button\n          className=\"contacts__btn\"\n          onClick={() => deleteContact(id)}\n          disabled={isDeleting}\n        >\n          {isDeleting ? \"Deleting...\" : \"Delete\"}\n        </button>\n      </li>\n    </>\n  );\n}\nContactItem.protoTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default ContactItem;\n","import Loader from \"react-loader-spinner\";\nimport { Component } from \"react\";\n\nexport default class Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <Loader\n        type=\"TailSpin\"\n        color=\"#8d125a\"\n        height={50}\n        width={50}\n        timeout={3000} //3 secs\n        style={{\n          position: \"fixed\",\n          top: \"60%\",\n          left: \"45%\",\n        }}\n      />\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filterValue, onChange }) => {\n  return (\n    <>\n      <div className=\"fiter__box\">\n        <h3 className=\"contacts__title-find\">Find contacts by name</h3>\n        <label>\n          <input\n            className=\"contacts__input\"\n            type=\"text\"\n            name=\"filter\"\n            value={filterValue}\n            onChange={(e) => onChange(e)}\n            // onChange={(e) => dispatch(actions.filtredContacts(e.target.value))}\n          ></input>\n        </label>\n      </div>\n    </>\n  );\n};\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filterValue: PropTypes.string,\n};\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport { useGetContactsQuery } from \"../../contacts-rtk/contactsSlice\";\nimport Spinner from \"../Loader/Spinner\";\nimport Filter from \"components/Filter\";\n\nfunction ContactList() {\n  const { data: contacts, isFetching, isError } = useGetContactsQuery();\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [filtredContacts, setFiltredContacts] = useState([]);\n\n  const filteredData = (e) => {\n    const { value } = e.currentTarget;\n    setFilterValue(value);\n  };\n  useEffect(() => {\n    if (filterValue !== \"\") {\n      const normalizeFilter = filterValue.toLowerCase();\n      const showContacts = contacts.filter((item) =>\n        item.name.toLowerCase().includes(normalizeFilter)\n      );\n      return setFiltredContacts(showContacts);\n    }\n  }, [filterValue, contacts]);\n\n  return (\n    <section className=\"contacts__section\">\n      <Filter vlue={filterValue} onChange={filteredData} />\n\n      <h2 className=\"contacts__title\">Contacts</h2>\n      {filterValue !== \"\" && (\n        <ul>\n          {filtredContacts.map((el) => {\n            return (\n              <ContactItem\n                key={el.id}\n                name={el.name}\n                number={el.number}\n                id={el.id}\n              />\n            );\n          })}\n        </ul>\n      )}\n      {isFetching && <Spinner />}\n      <ul className=\"contacts__list\">\n        {isError && <p className=\"contacts__title\">\"Not found\"</p>}\n\n        {contacts &&\n          !isError &&\n          !filterValue &&\n          contacts.map(({ name, number, id }) => {\n            return <ContactItem key={id} name={name} number={number} id={id} />;\n          })}\n      </ul>\n    </section>\n  );\n}\nContactList.protoTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import ContactForm from \"./ContactForm\";\nimport ContactList from \"./ContactList\";\nimport \"../styles/index.scss\";\n\n//\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Phonebook</h1>\n      <ContactForm />\n      <ContactList />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import { myAction } from \"./redux/action\";\nimport \"modern-normalize/modern-normalize.css\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={bigStore.persistor}> */}\n      <BrowserRouter>{<App />}</BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}